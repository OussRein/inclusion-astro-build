---
import Logo from '~/components/Logo.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';

import { getHomePermalink } from '~/utils/permalinks';
import { trimSlash } from '~/utils/permalinks';
import type { Article, CallToAction, ServiceCategory } from '~/types';
import LanguagePicker from './LanguagePicker.astro';
import { getLangFromUrl } from '~/i18n/utils';
import { useTranslatedPath, getRouteFromUrl } from '~/i18n/utils';
import { languages, routes } from '~/i18n/ui';

// Existing Link type with optional properties
interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

// ActionLink remains the same as CallToAction
interface ActionLink extends CallToAction {}

interface MenuLink extends Link {
  links?: Array<Link | ServiceCategory>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  languageHeaderArticle: Article;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const { id = 'header', links = [], isSticky = false, isDark = false, position = 'center' } = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;

const lang = getLangFromUrl(Astro.url);
const translatePath = useTranslatedPath(lang);

const route = getRouteFromUrl(Astro.url);

function translatePathOfLanguage(path: string, l: string) {
  const pathName = path.replaceAll('/', '');
  const hasTranslation = 'fr' !== l && routes[l] !== undefined && routes[l][pathName] !== undefined;
  const translatedPath = hasTranslation ? '/' + routes[l][pathName] : path;
  if (path === '/') return l === 'fr' ? path : `/${l}`;
  return l === 'fr' ? translatedPath : `/${l}${translatedPath}`;
}
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky, dark: isDark },
    'top-0 z-40 flex-none ml-0 rtl:mr-0  border-gray-50/0 transition-[opacity] ease-in-out',
  ]}
  {...isSticky ? { 'data-aw-sticky-header': true } : {}}
  {...id ? { id } : {}}
>
  <div
    class:list={[
      'absolute text-default mx-auto  bg-white/90 my-auto  md:rounded-br-md navbar-container hidden',
      {
        'md:flex ': position !== 'center',
      },
      {
        'md:flex md: py-2 md:flex-row md:items-center': position === 'center',
      },
    ]}
  >
    <div
      class:list={[
        { 'mr-auto rtl:mr-0 rtl:ml-auto': position === 'right' },
        'absolute flex px-2 justify-between w-40 mb-2',
      ]}
    >
      <a class="flex items-center" href={translatePath(getHomePermalink())}>
        <Logo />
      </a>
    </div>
    <div
      class:list={[
        { 'mr-auto rtl:mr-0 rtl:ml-auto': position === 'right' },
        'flex px-2 justify-self-end toggle-container',
      ]}
    >
      <div class="flex ml-6 items-center text-orange-600">
        <ToggleMenu />
      </div>
    </div>

    <nav class="main-nav" aria-label="Main navigation">
      <ul
        class="nav-list flex flex-row md:self-center w-screen text-xl md:text-[0.9375rem] font-medium justify-end"
      >
        {
          links.map(({ text, href }) => (
            <li class="nav-item">
              <a
                class:list={[
                  'hover:text-link px-4 py-3 flex items-center',
                  { 'aw-link-active': href === currentPath },
                ]}
                href={href}
              >
                {text}
              </a>
            </li>
          ))
        }

        <LanguagePicker />
      </ul>
    </nav>
  </div>

  <div class="mobile-navbar md:hidden flex bg-white">
    <a class="logo flex items-center" href={translatePath(getHomePermalink())}>
      <Logo />
    </a>
    <input id="menu-toggler" type="checkbox" class="menu-toggler" />
    <label for="menu-toggler" class="show-menu">
      <span></span>
    </label>

    <nav class="nav" aria-label="Mobile navigation">
      <ul class="nav__menu">
        {
          links.map(({ text, href }) => (
            <a class:list={['nav__link', { 'border-none aw-link-active': href === currentPath }]} href={href}>
              {text}
            </a>
          ))
        }

        <li class="nav__item">
          <>
            <button
              type="button"
              class="first-menu-level flex items-center w-full p-2 text-base text-white transition duration-75 rounded-lg group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700"
            >
              <span class="flex-1 ms-3 text-left rtl:text-right whitespace-nowrap"
                ><svg class="w-4 h-4 rtl:flip-180" fill="white" viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"
                  ><title>ionicons-v5-l</title><line
                    x1="48"
                    y1="112"
                    x2="336"
                    y2="112"
                    style="fill:none;stroke:#FFF;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px"
                  ></line><line
                    x1="192"
                    y1="64"
                    x2="192"
                    y2="112"
                    style="fill:none;stroke:#FFF;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px"
                  ></line><polyline
                    points="272 448 368 224 464 448"
                    style="fill:none;stroke:#FFF;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px"
                  ></polyline><line
                    x1="301.5"
                    y1="384"
                    x2="434.5"
                    y2="384"
                    style="fill:none;stroke:#FFF;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px"
                  ></line><path
                    d="M281.3,112S257,206,199,277,80,384,80,384"
                    style="fill:none;stroke:#FFF;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px"
                  ></path><path
                    d="M256,336s-35-27-72-75-56-85-56-85"
                    style="fill:none;stroke:#FFF;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px"
                  ></path></svg
                >Languages</span
              >
              <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
                <path
                  stroke="currentColor"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="m1 1 4 4 4-4"></path>
              </svg>
            </button>
            <ul class="dropdown-example2 hidden py-2 space-y-2">
              {
                Object.entries(languages).map(([lang, label]) => (
                  <li>
                    <a
                      href={translatePathOfLanguage(`/${route ? route : ''}`, lang)}
                      class="flex items-center w-full p-2 text-gray-900 transition duration-75 rounded-lg pl-11 group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700"
                    >
                      {label}
                    </a>
                  </li>
                ))
              }
            </ul>
          </>
        </li>
      </ul>
    </nav>
  </div>
</header>

<style is:inline>
  .mobile-navbar {
    position: relative;
    align-items: center;
    padding: 20px;
    border-bottom: 1px solid #ddd;
  }
  .logo {
    text-decoration: none;
    margin-right: auto;
    width: 170px;
    font-weight: 500;
  }
  .menu-toggler {
    left: 10px;
    top: 15px;
    opacity: 0;
    position: absolute;
  }
  .menu-toggler:checked + .show-menu span {
    background: transparent;
  }
  .menu-toggler:checked + .show-menu:after {
    top: 9px;
    transform: rotate(45deg);
  }
  .menu-toggler:checked + .show-menu:before {
    top: 9px;
    transform: rotate(-45deg);
  }
  .menu-toggler:checked ~ .nav {
    display: block;
    transform: translateX(0);
  }
  .show-menu {
    width: 32px;
    height: 22px;
    display: flex;
    left: auto;
    cursor: pointer;
    align-items: center;
    position: relative;
    justify-content: center;
  }
  .show-menu span,
  .show-menu:before,
  .show-menu:after {
    width: 100%;
    height: 4px;
    background: #d75d00;
    border-radius: 3px;
  }
  .show-menu:before,
  .show-menu:after {
    content: '';
    left: 0;
    position: absolute;
    transition: all 0.3s ease;
  }
  .show-menu:before {
    top: 0;
  }
  .show-menu:after {
    top: 18px;
  }
  .nav {
    right: 0;
    top: 70px;
    bottom: 0;
    width: 100%;
    position: fixed;
    background: #d75d00;
    transition: all 0.3s ease;
    transform: translateX(100%);
  }
  .nav__menu {
    list-style: none;
  }
  .nav__link {
    color: #fff;
    padding: 23px 23px;
    display: block;
    text-decoration: none;
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
  }

  .navbar-container {
    position: absolute;
    width: 300px;
    height: 75px;
    overflow: hidden;
    background-color: rgba(255, 255, 255, 0.9);
    transition: all 1s ease-in-out;
    transition-delay:3s;
  }

  .navbar-container:hover {
    width: 100%;
    height: 75px;
    transition-delay: 0s;
  }

  .toggle-container {
    position: absolute;
    top: 4px;
    right: 10px;
    transition: all 1s ease-in-out;
    transition-delay:3s;
  }

  .navbar-container:hover .toggle-container {
    opacity: 0;
    transition-delay: 0s;
  }

  .main-nav {
    width: auto;
    height: 0;
    position: fixed;
    right: 0;
    top: 0;
    opacity: 0;
    transition: opacity 0.3s ease-in;
    transition-delay:3s;
  }

  .navbar-container:hover .main-nav {
    width: auto;
    right: 0;
    opacity: 1;
    transition-delay: 0s;
  }

  .nav-list {
    position: relative;
    padding: 0;
  }

  .nav-item {
    opacity: 0;
    transition: all 1s ease-in-out;
    transition-delay:3s;
  }

  .navbar-container:hover .nav-item {
    opacity: 1;
  }

  .navbar-container:hover .nav-item:nth-child(1) {
    transition-delay: 0.1s;
  }
  .navbar-container:hover .nav-item:nth-child(2) {
    transition-delay: 0.2s;
  }
  .navbar-container:hover .nav-item:nth-child(3) {
    transition-delay: 0.3s;
  }
  .navbar-container:hover .nav-item:nth-child(4) {
    transition-delay: 0.4s;
  }
  .navbar-container:hover .nav-item:nth-child(5) {
    transition-delay: 0.5s;
  }
</style>
